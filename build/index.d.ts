// Generated by dts-bundle-generator v9.5.1

import Stripe from 'stripe';

export type ScheduledPropertyUpdates = {
	quantity?: number;
	price?: string;
	coupon?: string;
	proration_behavior?: Stripe.SubscriptionScheduleUpdateParams.Phase.ProrationBehavior;
	scheduled_at: number;
};
/**
 * Schedules a value change for a property (quantity, price...) at a specific time.
 *
 * Existing phases will be preserved, and property updates will be applied on top of them.
 * New phases will be created to accommodate the property updates.
 * Consecutive phases with identical properties will be merged into a single phase.
 *
 * @param existingPhases Array of preexisting phases in the schedule if any. Pass an empty array if there aren't any.
 * @param propertyUpdates Array of ScheduledPropertyUpdates objects that represent the property updates to apply.
 * @returns Array of SubscriptionScheduleUpdateParams.Phase objects that represent the updated phases and can be passed to stripe.subscriptionSchedules.update
 */
export declare function scheduleSubscriptionUpdates({ existingPhases, propertyUpdates, cancelAt, }: {
	existingPhases?: Stripe.SubscriptionSchedule.Phase[];
	propertyUpdates?: ScheduledPropertyUpdates[];
	cancelAt?: number;
}): Stripe.SubscriptionScheduleUpdateParams.Phase[];

export {};
